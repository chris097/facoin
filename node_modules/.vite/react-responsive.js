import {
  require_react
} from "./chunk-6BKO4LRG.js";
import "./chunk-3X2R2MMV.js";
import {
  __commonJS
} from "./chunk-ACCAMVX6.js";

// node_modules/react-responsive/dist/react-responsive.js
var require_react_responsive = __commonJS({
  "node_modules/react-responsive/dist/react-responsive.js"(exports, module) {
    !function(root, factory) {
      typeof exports == "object" && typeof module == "object" ? module.exports = factory(require_react()) : typeof define == "function" && define.amd ? define(["react"], factory) : typeof exports == "object" ? exports.MediaQuery = factory(require_react()) : root.MediaQuery = factory(root.React);
    }(typeof self != "undefined" ? self : exports, function(__WEBPACK_EXTERNAL_MODULE_1__) {
      return function(modules) {
        function __webpack_require__(moduleId) {
          if (installedModules[moduleId])
            return installedModules[moduleId].exports;
          var module2 = installedModules[moduleId] = {
            i: moduleId,
            l: false,
            exports: {}
          };
          return modules[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__), module2.l = true, module2.exports;
        }
        var installedModules = {};
        return __webpack_require__.m = modules, __webpack_require__.c = installedModules, __webpack_require__.d = function(exports2, name, getter) {
          __webpack_require__.o(exports2, name) || Object.defineProperty(exports2, name, {
            configurable: false,
            enumerable: true,
            get: getter
          });
        }, __webpack_require__.n = function(module2) {
          var getter = module2 && module2.__esModule ? function() {
            return module2.default;
          } : function() {
            return module2;
          };
          return __webpack_require__.d(getter, "a", getter), getter;
        }, __webpack_require__.o = function(object, property) {
          return Object.prototype.hasOwnProperty.call(object, property);
        }, __webpack_require__.p = "", __webpack_require__(__webpack_require__.s = 8);
      }([function(module2, exports2, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
          return mod && mod.__esModule ? mod : {
            default: mod
          };
        };
        Object.defineProperty(exports2, "__esModule", {
          value: true
        });
        var react_1 = __importDefault(__webpack_require__(1)), matchmediaquery_1 = __importDefault(__webpack_require__(9)), hyphenate_style_name_1 = __importDefault(__webpack_require__(2)), shallow_equal_1 = __webpack_require__(11), toQuery_1 = __importDefault(__webpack_require__(3)), Context_1 = __importDefault(__webpack_require__(7)), makeQuery = function(settings) {
          return settings.query || (0, toQuery_1.default)(settings);
        }, hyphenateKeys = function(obj) {
          if (obj) {
            return Object.keys(obj).reduce(function(result, key) {
              return result[(0, hyphenate_style_name_1.default)(key)] = obj[key], result;
            }, {});
          }
        }, useIsUpdate = function() {
          var ref = react_1.default.useRef(false);
          return react_1.default.useEffect(function() {
            ref.current = true;
          }, []), ref.current;
        }, useDevice = function(deviceFromProps) {
          var deviceFromContext = react_1.default.useContext(Context_1.default), getDevice = function() {
            return hyphenateKeys(deviceFromProps) || hyphenateKeys(deviceFromContext);
          }, _a = react_1.default.useState(getDevice), device = _a[0], setDevice = _a[1];
          return react_1.default.useEffect(function() {
            var newDevice = getDevice();
            (0, shallow_equal_1.shallowEqualObjects)(device, newDevice) || setDevice(newDevice);
          }, [deviceFromProps, deviceFromContext]), device;
        }, useQuery = function(settings) {
          var getQuery = function() {
            return makeQuery(settings);
          }, _a = react_1.default.useState(getQuery), query = _a[0], setQuery = _a[1];
          return react_1.default.useEffect(function() {
            var newQuery = getQuery();
            query !== newQuery && setQuery(newQuery);
          }, [settings]), query;
        }, useMatchMedia = function(query, device) {
          var getMatchMedia = function() {
            return (0, matchmediaquery_1.default)(query, device || {}, !!device);
          }, _a = react_1.default.useState(getMatchMedia), mq = _a[0], setMq = _a[1], isUpdate = useIsUpdate();
          return react_1.default.useEffect(function() {
            if (isUpdate) {
              var newMq_1 = getMatchMedia();
              return setMq(newMq_1), function() {
                newMq_1 && newMq_1.dispose();
              };
            }
          }, [query, device]), mq;
        }, useMatches = function(mediaQuery) {
          var _a = react_1.default.useState(mediaQuery.matches), matches = _a[0], setMatches = _a[1];
          return react_1.default.useEffect(function() {
            var updateMatches = function() {
              setMatches(mediaQuery.matches);
            };
            return mediaQuery.addListener(updateMatches), updateMatches(), function() {
              mediaQuery.removeListener(updateMatches);
            };
          }, [mediaQuery]), matches;
        }, useMediaQuery = function(settings, device, onChange) {
          var deviceSettings = useDevice(device), query = useQuery(settings);
          if (!query)
            throw new Error("Invalid or missing MediaQuery!");
          var mq = useMatchMedia(query, deviceSettings), matches = useMatches(mq), isUpdate = useIsUpdate();
          return react_1.default.useEffect(function() {
            isUpdate && onChange && onChange(matches);
          }, [matches]), react_1.default.useEffect(function() {
            return function() {
              mq && mq.dispose();
            };
          }, []), matches;
        };
        exports2.default = useMediaQuery;
      }, function(module2, exports2) {
        module2.exports = __WEBPACK_EXTERNAL_MODULE_1__;
      }, function(module2, __webpack_exports__, __webpack_require__) {
        "use strict";
        function toHyphenLower(match) {
          return "-" + match.toLowerCase();
        }
        function hyphenateStyleName(name) {
          if (cache.hasOwnProperty(name))
            return cache[name];
          var hName = name.replace(uppercasePattern, toHyphenLower);
          return cache[name] = msPattern.test(hName) ? "-" + hName : hName;
        }
        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        });
        var uppercasePattern = /[A-Z]/g, msPattern = /^ms-/, cache = {};
        __webpack_exports__.default = hyphenateStyleName;
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
          return mod && mod.__esModule ? mod : {
            default: mod
          };
        };
        Object.defineProperty(exports2, "__esModule", {
          value: true
        });
        var hyphenate_style_name_1 = __importDefault(__webpack_require__(2)), mediaQuery_1 = __importDefault(__webpack_require__(12)), negate = function(cond) {
          return "not ".concat(cond);
        }, keyVal = function(k, v) {
          var realKey = (0, hyphenate_style_name_1.default)(k);
          return typeof v == "number" && (v = "".concat(v, "px")), v === true ? realKey : v === false ? negate(realKey) : "(".concat(realKey, ": ").concat(v, ")");
        }, join = function(conds) {
          return conds.join(" and ");
        }, toQuery = function(obj) {
          var rules = [];
          return Object.keys(mediaQuery_1.default.all).forEach(function(k) {
            var v = obj[k];
            v != null && rules.push(keyVal(k, v));
          }), join(rules);
        };
        exports2.default = toQuery;
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        module2.exports = __webpack_require__(14);
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        module2.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
      }, function(module2, exports2) {
        module2.exports = Function.call.bind(Object.prototype.hasOwnProperty);
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
          return mod && mod.__esModule ? mod : {
            default: mod
          };
        };
        Object.defineProperty(exports2, "__esModule", {
          value: true
        });
        var react_1 = __importDefault(__webpack_require__(1)), Context = react_1.default.createContext(void 0);
        exports2.default = Context;
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
          return mod && mod.__esModule ? mod : {
            default: mod
          };
        };
        Object.defineProperty(exports2, "__esModule", {
          value: true
        }), exports2.Context = exports2.toQuery = exports2.useMediaQuery = exports2.default = void 0;
        var useMediaQuery_1 = __importDefault(__webpack_require__(0));
        exports2.useMediaQuery = useMediaQuery_1.default;
        var Component_1 = __importDefault(__webpack_require__(18));
        exports2.default = Component_1.default;
        var toQuery_1 = __importDefault(__webpack_require__(3));
        exports2.toQuery = toQuery_1.default;
        var Context_1 = __importDefault(__webpack_require__(7));
        exports2.Context = Context_1.default;
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        function Mql(query, values, forceStatic) {
          function addListener(listener) {
            mql && mql.addListener(listener);
          }
          function removeListener(listener) {
            mql && mql.removeListener(listener);
          }
          function update(evt) {
            self2.matches = evt.matches, self2.media = evt.media;
          }
          function dispose() {
            mql && mql.removeListener(update);
          }
          var self2 = this;
          if (dynamicMatch && !forceStatic) {
            var mql = dynamicMatch.call(window, query);
            this.matches = mql.matches, this.media = mql.media, mql.addListener(update);
          } else
            this.matches = staticMatch(query, values), this.media = query;
          this.addListener = addListener, this.removeListener = removeListener, this.dispose = dispose;
        }
        function matchMedia(query, values, forceStatic) {
          return new Mql(query, values, forceStatic);
        }
        var staticMatch = __webpack_require__(10).match, dynamicMatch = typeof window != "undefined" ? window.matchMedia : null;
        module2.exports = matchMedia;
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        function matchQuery(mediaQuery, values) {
          return parseQuery(mediaQuery).some(function(query) {
            var inverse = query.inverse, typeMatch = query.type === "all" || values.type === query.type;
            if (typeMatch && inverse || !typeMatch && !inverse)
              return false;
            var expressionsMatch = query.expressions.every(function(expression) {
              var feature = expression.feature, modifier = expression.modifier, expValue = expression.value, value = values[feature];
              if (!value)
                return false;
              switch (feature) {
                case "orientation":
                case "scan":
                  return value.toLowerCase() === expValue.toLowerCase();
                case "width":
                case "height":
                case "device-width":
                case "device-height":
                  expValue = toPx(expValue), value = toPx(value);
                  break;
                case "resolution":
                  expValue = toDpi(expValue), value = toDpi(value);
                  break;
                case "aspect-ratio":
                case "device-aspect-ratio":
                case "device-pixel-ratio":
                  expValue = toDecimal(expValue), value = toDecimal(value);
                  break;
                case "grid":
                case "color":
                case "color-index":
                case "monochrome":
                  expValue = parseInt(expValue, 10) || 1, value = parseInt(value, 10) || 0;
              }
              switch (modifier) {
                case "min":
                  return value >= expValue;
                case "max":
                  return value <= expValue;
                default:
                  return value === expValue;
              }
            });
            return expressionsMatch && !inverse || !expressionsMatch && inverse;
          });
        }
        function parseQuery(mediaQuery) {
          return mediaQuery.split(",").map(function(query) {
            query = query.trim();
            var captures = query.match(RE_MEDIA_QUERY), modifier = captures[1], type = captures[2], expressions = captures[3] || "", parsed = {};
            return parsed.inverse = !!modifier && modifier.toLowerCase() === "not", parsed.type = type ? type.toLowerCase() : "all", expressions = expressions.match(/\([^\)]+\)/g) || [], parsed.expressions = expressions.map(function(expression) {
              var captures2 = expression.match(RE_MQ_EXPRESSION), feature = captures2[1].toLowerCase().match(RE_MQ_FEATURE);
              return {
                modifier: feature[1],
                feature: feature[2],
                value: captures2[2]
              };
            }), parsed;
          });
        }
        function toDecimal(ratio) {
          var numbers, decimal = Number(ratio);
          return decimal || (numbers = ratio.match(/^(\d+)\s*\/\s*(\d+)$/), decimal = numbers[1] / numbers[2]), decimal;
        }
        function toDpi(resolution) {
          var value = parseFloat(resolution);
          switch (String(resolution).match(RE_RESOLUTION_UNIT)[1]) {
            case "dpcm":
              return value / 2.54;
            case "dppx":
              return 96 * value;
            default:
              return value;
          }
        }
        function toPx(length) {
          var value = parseFloat(length);
          switch (String(length).match(RE_LENGTH_UNIT)[1]) {
            case "em":
            case "rem":
              return 16 * value;
            case "cm":
              return 96 * value / 2.54;
            case "mm":
              return 96 * value / 2.54 / 10;
            case "in":
              return 96 * value;
            case "pt":
              return 72 * value;
            case "pc":
              return 72 * value / 12;
            default:
              return value;
          }
        }
        exports2.match = matchQuery, exports2.parse = parseQuery;
        var RE_MEDIA_QUERY = /(?:(only|not)?\s*([^\s\(\)]+)(?:\s*and)?\s*)?(.+)?/i, RE_MQ_EXPRESSION = /\(\s*([^\s\:\)]+)\s*(?:\:\s*([^\s\)]+))?\s*\)/, RE_MQ_FEATURE = /^(?:(min|max)-)?(.+)/, RE_LENGTH_UNIT = /(em|rem|px|cm|mm|in|pt|pc)?$/, RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;
      }, function(module2, __webpack_exports__, __webpack_require__) {
        "use strict";
        function shallowEqualObjects(objA, objB) {
          if (objA === objB)
            return true;
          if (!objA || !objB)
            return false;
          var aKeys = Object.keys(objA), bKeys = Object.keys(objB), len = aKeys.length;
          if (bKeys.length !== len)
            return false;
          for (var i = 0; i < len; i++) {
            var key = aKeys[i];
            if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key))
              return false;
          }
          return true;
        }
        function shallowEqualArrays(arrA, arrB) {
          if (arrA === arrB)
            return true;
          if (!arrA || !arrB)
            return false;
          var len = arrA.length;
          if (arrB.length !== len)
            return false;
          for (var i = 0; i < len; i++)
            if (arrA[i] !== arrB[i])
              return false;
          return true;
        }
        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true
        }), __webpack_require__.d(__webpack_exports__, "shallowEqualArrays", function() {
          return shallowEqualArrays;
        }), __webpack_require__.d(__webpack_exports__, "shallowEqualObjects", function() {
          return shallowEqualObjects;
        });
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        var __assign = this && this.__assign || function() {
          return __assign = Object.assign || function(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
              s = arguments[i];
              for (var p in s)
                Object.prototype.hasOwnProperty.call(s, p) && (t[p] = s[p]);
            }
            return t;
          }, __assign.apply(this, arguments);
        }, __rest = this && this.__rest || function(s, e) {
          var t = {};
          for (var p in s)
            Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0 && (t[p] = s[p]);
          if (s != null && typeof Object.getOwnPropertySymbols == "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)
              e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]) && (t[p[i]] = s[p[i]]);
          return t;
        }, __importDefault = this && this.__importDefault || function(mod) {
          return mod && mod.__esModule ? mod : {
            default: mod
          };
        };
        Object.defineProperty(exports2, "__esModule", {
          value: true
        });
        var prop_types_1 = __importDefault(__webpack_require__(13)), stringOrNumber = prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.number]), types = {
          all: prop_types_1.default.bool,
          grid: prop_types_1.default.bool,
          aural: prop_types_1.default.bool,
          braille: prop_types_1.default.bool,
          handheld: prop_types_1.default.bool,
          print: prop_types_1.default.bool,
          projection: prop_types_1.default.bool,
          screen: prop_types_1.default.bool,
          tty: prop_types_1.default.bool,
          tv: prop_types_1.default.bool,
          embossed: prop_types_1.default.bool
        }, matchers = {
          orientation: prop_types_1.default.oneOf(["portrait", "landscape"]),
          scan: prop_types_1.default.oneOf(["progressive", "interlace"]),
          aspectRatio: prop_types_1.default.string,
          deviceAspectRatio: prop_types_1.default.string,
          height: stringOrNumber,
          deviceHeight: stringOrNumber,
          width: stringOrNumber,
          deviceWidth: stringOrNumber,
          color: prop_types_1.default.bool,
          colorIndex: prop_types_1.default.bool,
          monochrome: prop_types_1.default.bool,
          resolution: stringOrNumber,
          type: Object.keys(types)
        }, featureMatchers = __rest(matchers, ["type"]), features = __assign({
          minAspectRatio: prop_types_1.default.string,
          maxAspectRatio: prop_types_1.default.string,
          minDeviceAspectRatio: prop_types_1.default.string,
          maxDeviceAspectRatio: prop_types_1.default.string,
          minHeight: stringOrNumber,
          maxHeight: stringOrNumber,
          minDeviceHeight: stringOrNumber,
          maxDeviceHeight: stringOrNumber,
          minWidth: stringOrNumber,
          maxWidth: stringOrNumber,
          minDeviceWidth: stringOrNumber,
          maxDeviceWidth: stringOrNumber,
          minColor: prop_types_1.default.number,
          maxColor: prop_types_1.default.number,
          minColorIndex: prop_types_1.default.number,
          maxColorIndex: prop_types_1.default.number,
          minMonochrome: prop_types_1.default.number,
          maxMonochrome: prop_types_1.default.number,
          minResolution: stringOrNumber,
          maxResolution: stringOrNumber
        }, featureMatchers), all = __assign(__assign({}, types), features);
        exports2.default = {
          all,
          types,
          matchers,
          features
        };
      }, function(module2, exports2, __webpack_require__) {
        var ReactIs = __webpack_require__(4);
        module2.exports = __webpack_require__(15)(ReactIs.isElement, true);
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        !function() {
          function isValidElementType(type) {
            return typeof type == "string" || typeof type == "function" || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type == "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
          }
          function typeOf(object) {
            if (typeof object == "object" && object !== null) {
              var $$typeof = object.$$typeof;
              switch ($$typeof) {
                case REACT_ELEMENT_TYPE:
                  var type = object.type;
                  switch (type) {
                    case REACT_ASYNC_MODE_TYPE:
                    case REACT_CONCURRENT_MODE_TYPE:
                    case REACT_FRAGMENT_TYPE:
                    case REACT_PROFILER_TYPE:
                    case REACT_STRICT_MODE_TYPE:
                    case REACT_SUSPENSE_TYPE:
                      return type;
                    default:
                      var $$typeofType = type && type.$$typeof;
                      switch ($$typeofType) {
                        case REACT_CONTEXT_TYPE:
                        case REACT_FORWARD_REF_TYPE:
                        case REACT_LAZY_TYPE:
                        case REACT_MEMO_TYPE:
                        case REACT_PROVIDER_TYPE:
                          return $$typeofType;
                        default:
                          return $$typeof;
                      }
                  }
                case REACT_PORTAL_TYPE:
                  return $$typeof;
              }
            }
          }
          function isAsyncMode(object) {
            return hasWarnedAboutDeprecatedIsAsyncMode || (hasWarnedAboutDeprecatedIsAsyncMode = true, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
          }
          function isConcurrentMode(object) {
            return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
          }
          function isContextConsumer(object) {
            return typeOf(object) === REACT_CONTEXT_TYPE;
          }
          function isContextProvider(object) {
            return typeOf(object) === REACT_PROVIDER_TYPE;
          }
          function isElement(object) {
            return typeof object == "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
          function isForwardRef(object) {
            return typeOf(object) === REACT_FORWARD_REF_TYPE;
          }
          function isFragment(object) {
            return typeOf(object) === REACT_FRAGMENT_TYPE;
          }
          function isLazy(object) {
            return typeOf(object) === REACT_LAZY_TYPE;
          }
          function isMemo(object) {
            return typeOf(object) === REACT_MEMO_TYPE;
          }
          function isPortal(object) {
            return typeOf(object) === REACT_PORTAL_TYPE;
          }
          function isProfiler(object) {
            return typeOf(object) === REACT_PROFILER_TYPE;
          }
          function isStrictMode(object) {
            return typeOf(object) === REACT_STRICT_MODE_TYPE;
          }
          function isSuspense(object) {
            return typeOf(object) === REACT_SUSPENSE_TYPE;
          }
          var hasSymbol = typeof Symbol == "function" && Symbol.for, REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103, REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106, REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107, REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108, REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114, REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109, REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110, REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111, REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111, REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112, REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113, REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120, REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115, REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116, REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121, REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117, REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118, REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119, AsyncMode = REACT_ASYNC_MODE_TYPE, ConcurrentMode = REACT_CONCURRENT_MODE_TYPE, ContextConsumer = REACT_CONTEXT_TYPE, ContextProvider = REACT_PROVIDER_TYPE, Element = REACT_ELEMENT_TYPE, ForwardRef = REACT_FORWARD_REF_TYPE, Fragment = REACT_FRAGMENT_TYPE, Lazy = REACT_LAZY_TYPE, Memo = REACT_MEMO_TYPE, Portal = REACT_PORTAL_TYPE, Profiler = REACT_PROFILER_TYPE, StrictMode = REACT_STRICT_MODE_TYPE, Suspense = REACT_SUSPENSE_TYPE, hasWarnedAboutDeprecatedIsAsyncMode = false;
          exports2.AsyncMode = AsyncMode, exports2.ConcurrentMode = ConcurrentMode, exports2.ContextConsumer = ContextConsumer, exports2.ContextProvider = ContextProvider, exports2.Element = Element, exports2.ForwardRef = ForwardRef, exports2.Fragment = Fragment, exports2.Lazy = Lazy, exports2.Memo = Memo, exports2.Portal = Portal, exports2.Profiler = Profiler, exports2.StrictMode = StrictMode, exports2.Suspense = Suspense, exports2.isAsyncMode = isAsyncMode, exports2.isConcurrentMode = isConcurrentMode, exports2.isContextConsumer = isContextConsumer, exports2.isContextProvider = isContextProvider, exports2.isElement = isElement, exports2.isForwardRef = isForwardRef, exports2.isFragment = isFragment, exports2.isLazy = isLazy, exports2.isMemo = isMemo, exports2.isPortal = isPortal, exports2.isProfiler = isProfiler, exports2.isStrictMode = isStrictMode, exports2.isSuspense = isSuspense, exports2.isValidElementType = isValidElementType, exports2.typeOf = typeOf;
        }();
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        function emptyFunctionThatReturnsNull() {
          return null;
        }
        var ReactIs = __webpack_require__(4), assign = __webpack_require__(16), ReactPropTypesSecret = __webpack_require__(5), has = __webpack_require__(6), checkPropTypes = __webpack_require__(17), printWarning = function() {
        };
        printWarning = function(text) {
          var message = "Warning: " + text;
          typeof console != "undefined" && console.error(message);
          try {
            throw new Error(message);
          } catch (x) {
          }
        }, module2.exports = function(isValidElement, throwOnDirectAccess) {
          function getIteratorFn(maybeIterable) {
            var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
            if (typeof iteratorFn == "function")
              return iteratorFn;
          }
          function is(x, y) {
            return x === y ? x !== 0 || 1 / x == 1 / y : x !== x && y !== y;
          }
          function PropTypeError(message, data) {
            this.message = message, this.data = data && typeof data == "object" ? data : {}, this.stack = "";
          }
          function createChainableTypeChecker(validate) {
            function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
              if (componentName = componentName || ANONYMOUS, propFullName = propFullName || propName, secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                  var err = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");
                  throw err.name = "Invariant Violation", err;
                }
                if (typeof console != "undefined") {
                  var cacheKey = componentName + ":" + propName;
                  !manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3 && (printWarning("You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."), manualPropTypeCallCache[cacheKey] = true, manualPropTypeWarningCount++);
                }
              }
              return props[propName] == null ? isRequired ? new PropTypeError(props[propName] === null ? "The " + location + " `" + propFullName + "` is marked as required in `" + componentName + "`, but its value is `null`." : "The " + location + " `" + propFullName + "` is marked as required in `" + componentName + "`, but its value is `undefined`.") : null : validate(props, propName, componentName, location, propFullName);
            }
            var manualPropTypeCallCache = {}, manualPropTypeWarningCount = 0, chainedCheckType = checkType.bind(null, false);
            return chainedCheckType.isRequired = checkType.bind(null, true), chainedCheckType;
          }
          function createPrimitiveTypeChecker(expectedType) {
            function validate(props, propName, componentName, location, propFullName, secret) {
              var propValue = props[propName];
              if (getPropType(propValue) !== expectedType)
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getPreciseType(propValue) + "` supplied to `" + componentName + "`, expected `" + expectedType + "`.", {
                  expectedType
                });
              return null;
            }
            return createChainableTypeChecker(validate);
          }
          function createArrayOfTypeChecker(typeChecker) {
            function validate(props, propName, componentName, location, propFullName) {
              if (typeof typeChecker != "function")
                return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
              var propValue = props[propName];
              if (!Array.isArray(propValue)) {
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getPropType(propValue) + "` supplied to `" + componentName + "`, expected an array.");
              }
              for (var i = 0; i < propValue.length; i++) {
                var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
                if (error instanceof Error)
                  return error;
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }
          function createInstanceTypeChecker(expectedClass) {
            function validate(props, propName, componentName, location, propFullName) {
              if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getClassName(props[propName]) + "` supplied to `" + componentName + "`, expected instance of `" + expectedClassName + "`.");
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }
          function createEnumTypeChecker(expectedValues) {
            function validate(props, propName, componentName, location, propFullName) {
              for (var propValue = props[propName], i = 0; i < expectedValues.length; i++)
                if (is(propValue, expectedValues[i]))
                  return null;
              var valuesString = JSON.stringify(expectedValues, function(key, value) {
                return getPreciseType(value) === "symbol" ? String(value) : value;
              });
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` supplied to `" + componentName + "`, expected one of " + valuesString + ".");
            }
            return Array.isArray(expectedValues) ? createChainableTypeChecker(validate) : (printWarning(arguments.length > 1 ? "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])." : "Invalid argument supplied to oneOf, expected an array."), emptyFunctionThatReturnsNull);
          }
          function createObjectOfTypeChecker(typeChecker) {
            function validate(props, propName, componentName, location, propFullName) {
              if (typeof typeChecker != "function")
                return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
              var propValue = props[propName], propType = getPropType(propValue);
              if (propType !== "object")
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` supplied to `" + componentName + "`, expected an object.");
              for (var key in propValue)
                if (has(propValue, key)) {
                  var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                  if (error instanceof Error)
                    return error;
                }
              return null;
            }
            return createChainableTypeChecker(validate);
          }
          function createUnionTypeChecker(arrayOfTypeCheckers) {
            function validate(props, propName, componentName, location, propFullName) {
              for (var expectedTypes = [], i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
                var checker2 = arrayOfTypeCheckers[i2], checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                if (checkerResult == null)
                  return null;
                checkerResult.data && has(checkerResult.data, "expectedType") && expectedTypes.push(checkerResult.data.expectedType);
              }
              return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to `" + componentName + "`" + (expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "") + ".");
            }
            if (!Array.isArray(arrayOfTypeCheckers))
              return printWarning("Invalid argument supplied to oneOfType, expected an instance of array."), emptyFunctionThatReturnsNull;
            for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
              var checker = arrayOfTypeCheckers[i];
              if (typeof checker != "function")
                return printWarning("Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."), emptyFunctionThatReturnsNull;
            }
            return createChainableTypeChecker(validate);
          }
          function invalidValidatorError(componentName, location, propFullName, key, type) {
            return new PropTypeError((componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`.");
          }
          function createShapeTypeChecker(shapeTypes) {
            function validate(props, propName, componentName, location, propFullName) {
              var propValue = props[propName], propType = getPropType(propValue);
              if (propType !== "object")
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` supplied to `" + componentName + "`, expected `object`.");
              for (var key in shapeTypes) {
                var checker = shapeTypes[key];
                if (typeof checker != "function")
                  return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                if (error)
                  return error;
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }
          function createStrictShapeTypeChecker(shapeTypes) {
            function validate(props, propName, componentName, location, propFullName) {
              var propValue = props[propName], propType = getPropType(propValue);
              if (propType !== "object")
                return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` supplied to `" + componentName + "`, expected `object`.");
              var allKeys = assign({}, props[propName], shapeTypes);
              for (var key in allKeys) {
                var checker = shapeTypes[key];
                if (has(shapeTypes, key) && typeof checker != "function")
                  return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                if (!checker)
                  return new PropTypeError("Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  "));
                var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
                if (error)
                  return error;
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }
          function isNode(propValue) {
            switch (typeof propValue) {
              case "number":
              case "string":
              case "undefined":
                return true;
              case "boolean":
                return !propValue;
              case "object":
                if (Array.isArray(propValue))
                  return propValue.every(isNode);
                if (propValue === null || isValidElement(propValue))
                  return true;
                var iteratorFn = getIteratorFn(propValue);
                if (!iteratorFn)
                  return false;
                var step, iterator = iteratorFn.call(propValue);
                if (iteratorFn !== propValue.entries) {
                  for (; !(step = iterator.next()).done; )
                    if (!isNode(step.value))
                      return false;
                } else
                  for (; !(step = iterator.next()).done; ) {
                    var entry = step.value;
                    if (entry && !isNode(entry[1]))
                      return false;
                  }
                return true;
              default:
                return false;
            }
          }
          function isSymbol(propType, propValue) {
            return propType === "symbol" || !!propValue && (propValue["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && propValue instanceof Symbol);
          }
          function getPropType(propValue) {
            var propType = typeof propValue;
            return Array.isArray(propValue) ? "array" : propValue instanceof RegExp ? "object" : isSymbol(propType, propValue) ? "symbol" : propType;
          }
          function getPreciseType(propValue) {
            if (propValue === void 0 || propValue === null)
              return "" + propValue;
            var propType = getPropType(propValue);
            if (propType === "object") {
              if (propValue instanceof Date)
                return "date";
              if (propValue instanceof RegExp)
                return "regexp";
            }
            return propType;
          }
          function getPostfixForTypeWarning(value) {
            var type = getPreciseType(value);
            switch (type) {
              case "array":
              case "object":
                return "an " + type;
              case "boolean":
              case "date":
              case "regexp":
                return "a " + type;
              default:
                return type;
            }
          }
          function getClassName(propValue) {
            return propValue.constructor && propValue.constructor.name ? propValue.constructor.name : ANONYMOUS;
          }
          var ITERATOR_SYMBOL = typeof Symbol == "function" && Symbol.iterator, FAUX_ITERATOR_SYMBOL = "@@iterator", ANONYMOUS = "<<anonymous>>", ReactPropTypes = {
            array: createPrimitiveTypeChecker("array"),
            bigint: createPrimitiveTypeChecker("bigint"),
            bool: createPrimitiveTypeChecker("boolean"),
            func: createPrimitiveTypeChecker("function"),
            number: createPrimitiveTypeChecker("number"),
            object: createPrimitiveTypeChecker("object"),
            string: createPrimitiveTypeChecker("string"),
            symbol: createPrimitiveTypeChecker("symbol"),
            any: function() {
              return createChainableTypeChecker(emptyFunctionThatReturnsNull);
            }(),
            arrayOf: createArrayOfTypeChecker,
            element: function() {
              function validate(props, propName, componentName, location, propFullName) {
                var propValue = props[propName];
                if (!isValidElement(propValue)) {
                  return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getPropType(propValue) + "` supplied to `" + componentName + "`, expected a single ReactElement.");
                }
                return null;
              }
              return createChainableTypeChecker(validate);
            }(),
            elementType: function() {
              function validate(props, propName, componentName, location, propFullName) {
                var propValue = props[propName];
                if (!ReactIs.isValidElementType(propValue)) {
                  return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + getPropType(propValue) + "` supplied to `" + componentName + "`, expected a single ReactElement type.");
                }
                return null;
              }
              return createChainableTypeChecker(validate);
            }(),
            instanceOf: createInstanceTypeChecker,
            node: function() {
              function validate(props, propName, componentName, location, propFullName) {
                return isNode(props[propName]) ? null : new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to `" + componentName + "`, expected a ReactNode.");
              }
              return createChainableTypeChecker(validate);
            }(),
            objectOf: createObjectOfTypeChecker,
            oneOf: createEnumTypeChecker,
            oneOfType: createUnionTypeChecker,
            shape: createShapeTypeChecker,
            exact: createStrictShapeTypeChecker
          };
          return PropTypeError.prototype = Error.prototype, ReactPropTypes.checkPropTypes = checkPropTypes, ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache, ReactPropTypes.PropTypes = ReactPropTypes, ReactPropTypes;
        };
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        function toObject(val) {
          if (val === null || val === void 0)
            throw new TypeError("Object.assign cannot be called with null or undefined");
          return Object(val);
        }
        var getOwnPropertySymbols = Object.getOwnPropertySymbols, hasOwnProperty = Object.prototype.hasOwnProperty, propIsEnumerable = Object.prototype.propertyIsEnumerable;
        module2.exports = function() {
          try {
            if (!Object.assign)
              return false;
            var test1 = new String("abc");
            if (test1[5] = "de", Object.getOwnPropertyNames(test1)[0] === "5")
              return false;
            for (var test2 = {}, i = 0; i < 10; i++)
              test2["_" + String.fromCharCode(i)] = i;
            if (Object.getOwnPropertyNames(test2).map(function(n) {
              return test2[n];
            }).join("") !== "0123456789")
              return false;
            var test3 = {};
            return "abcdefghijklmnopqrst".split("").forEach(function(letter) {
              test3[letter] = letter;
            }), Object.keys(Object.assign({}, test3)).join("") === "abcdefghijklmnopqrst";
          } catch (err) {
            return false;
          }
        }() ? Object.assign : function(target, source) {
          for (var from, symbols, to = toObject(target), s = 1; s < arguments.length; s++) {
            from = Object(arguments[s]);
            for (var key in from)
              hasOwnProperty.call(from, key) && (to[key] = from[key]);
            if (getOwnPropertySymbols) {
              symbols = getOwnPropertySymbols(from);
              for (var i = 0; i < symbols.length; i++)
                propIsEnumerable.call(from, symbols[i]) && (to[symbols[i]] = from[symbols[i]]);
            }
          }
          return to;
        };
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
          for (var typeSpecName in typeSpecs)
            if (has(typeSpecs, typeSpecName)) {
              var error;
              try {
                if (typeof typeSpecs[typeSpecName] != "function") {
                  var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                  throw err.name = "Invariant Violation", err;
                }
                error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
              } catch (ex) {
                error = ex;
              }
              if (!error || error instanceof Error || printWarning((componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."), error instanceof Error && !(error.message in loggedTypeFailures)) {
                loggedTypeFailures[error.message] = true;
                var stack = getStack ? getStack() : "";
                printWarning("Failed " + location + " type: " + error.message + (stack != null ? stack : ""));
              }
            }
        }
        var printWarning = function() {
        }, ReactPropTypesSecret = __webpack_require__(5), loggedTypeFailures = {}, has = __webpack_require__(6);
        printWarning = function(text) {
          var message = "Warning: " + text;
          typeof console != "undefined" && console.error(message);
          try {
            throw new Error(message);
          } catch (x) {
          }
        }, checkPropTypes.resetWarningCache = function() {
          loggedTypeFailures = {};
        }, module2.exports = checkPropTypes;
      }, function(module2, exports2, __webpack_require__) {
        "use strict";
        var __rest = this && this.__rest || function(s, e) {
          var t = {};
          for (var p in s)
            Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0 && (t[p] = s[p]);
          if (s != null && typeof Object.getOwnPropertySymbols == "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)
              e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]) && (t[p[i]] = s[p[i]]);
          return t;
        }, __importDefault = this && this.__importDefault || function(mod) {
          return mod && mod.__esModule ? mod : {
            default: mod
          };
        };
        Object.defineProperty(exports2, "__esModule", {
          value: true
        });
        var useMediaQuery_1 = __importDefault(__webpack_require__(0)), MediaQuery = function(_a) {
          var children = _a.children, device = _a.device, onChange = _a.onChange, settings = __rest(_a, ["children", "device", "onChange"]), matches = (0, useMediaQuery_1.default)(settings, device, onChange);
          return typeof children == "function" ? children(matches) : matches ? children : null;
        };
        exports2.default = MediaQuery;
      }]);
    });
  }
});

// dep:react-responsive
var react_responsive_default = require_react_responsive();
export {
  react_responsive_default as default
};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
//# sourceMappingURL=react-responsive.js.map
